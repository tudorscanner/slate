## Flights Day View Schema

```txt
/flights/day-view
```

A schema definition for the flights day-view microsite supported parameters

| Abstract            | Extensible | Status         | Identifiable | Custom Properties | Additional Properties | Access Restrictions |
| :------------------ | :--------- | :------------- | :----------- | :---------------- | :-------------------- | :------------------ |
| Can be instantiated | No         | Unknown status | No           | Forbidden         | Allowed               | none                |

### Flights Day View Type

`object` ([Flights Day View](dayview.md))

## Flights Day View Properties

| Property                                            | Type      | Required | Nullable       |
| :-------------------------------------------------- | :-------- | :------- | :------------- |
| [origin](#origin)                                   | `string`  | Required | cannot be null |
| [destination](#destination)                         | `string`  | Required | cannot be null |
| [outboundDate](#outbounddate)                       | `string`  | Required | cannot be null |
| [inboundDate](#inbounddate)                         | `string`  | Optional | cannot be null |
| [adultsv2](#adultsv2)                               | `integer` | Required | cannot be null |
| [childrenv2](#childrenv2)                           | `string`  | Optional | cannot be null |
| [infants](#infants)                                 | `integer` | Optional | cannot be null |
| [cabinclass](#cabinclass)                           | `string`  | Required | cannot be null |
| [rtn](#rtn)                                         | `string`  | Optional | cannot be null |
| [preferDirects](#preferdirects)                     | `boolean` | Optional | cannot be null |
| [showDirectDays](#showdirectdays)                   | `boolean` | Optional | cannot be null |
| [outboundaltsenabled](#outboundaltsenabled)         | `boolean` | Optional | cannot be null |
| [inboundaltsenabled](#inboundaltsenabled)           | `boolean` | Optional | cannot be null |
| [alternativeorigins](#alternativeorigins)           | `array`   | Optional | cannot be null |
| [alternativedestinations](#alternativedestinations) | `array`   | Optional | cannot be null |
| [market](#market)                                   | `string`  | Optional | cannot be null |
| [locale](#locale)                                   | `string`  | Optional | cannot be null |
| [currency](#currency)                               | `string`  | Optional | cannot be null |
| [sortby](#sortby)                                   | `string`  | Optional | cannot be null |
| [airlines](#airlines)                               | `string`  | Optional | cannot be null |
| [alliances](#alliances)                             | `string`  | Optional | cannot be null |
| [departure-times](#departure-times)                 | `string`  | Optional | cannot be null |
| [duration](#duration)                               | `integer` | Optional | cannot be null |

### origin

Location code for the origin

`origin`

*   is required

*   Type: `string` ([Origin](dayview-properties-origin.md))

*   cannot be null

#### origin Type

`string` ([Origin](dayview-properties-origin.md))

#### origin Constraints

**unknown format**: the value of this string must follow the format: `place`

### destination

Location code for the destination

`destination`

*   is required

*   Type: `string` ([Destination](dayview-properties-destination.md))

*   cannot be null

#### destination Type

`string` ([Destination](dayview-properties-destination.md))

#### destination Constraints

**unknown format**: the value of this string must follow the format: `place`

### outboundDate

Outbound date in the format YYYY-MM-DD

`outboundDate`

*   is required

*   Type: `string` ([Outbound Date](dayview-properties-outbound-date.md))

*   cannot be null

#### outboundDate Type

`string` ([Outbound Date](dayview-properties-outbound-date.md))

#### outboundDate Constraints

**unknown format**: the value of this string must follow the format: `date-yymmdd`

### inboundDate

Inbound date in the format YYYY-MM-DD

`inboundDate`

*   is optional

*   Type: `string` ([Inbound Date](dayview-properties-inbound-date.md))

*   cannot be null

#### inboundDate Type

`string` ([Inbound Date](dayview-properties-inbound-date.md))

#### inboundDate Constraints

**unknown format**: the value of this string must follow the format: `date-yymmdd`

### adultsv2

Number of adult passengers. Adults have to be 16 years old or older.

`adultsv2`

*   is required

*   Type: `integer` ([Adult passengers. Adults have to be 16 years old or older.](dayview-properties-adult-passengers-adults-have-to-be-16-years-old-or-older.md))

*   cannot be null

#### adultsv2 Type

`integer` ([Adult passengers. Adults have to be 16 years old or older.](dayview-properties-adult-passengers-adults-have-to-be-16-years-old-or-older.md))

#### adultsv2 Constraints

**minimum**: the value of this number must greater than or equal to: `1`

#### adultsv2 Default Value

The default value is:

```json
1
```

### childrenv2

Number of child passengers. The value must be in the format integer|integer.. where each number is the age of the child passenger

`childrenv2`

*   is optional

*   Type: `string` ([Child passengers. Add a child and specify the age (must be from 2 to 15).](dayview-properties-child-passengers-add-a-child-and-specify-the-age-must-be-from-2-to-15.md))

*   cannot be null

#### childrenv2 Type

`string` ([Child passengers. Add a child and specify the age (must be from 2 to 15).](dayview-properties-child-passengers-add-a-child-and-specify-the-age-must-be-from-2-to-15.md))

#### childrenv2 Constraints

**unknown format**: the value of this string must follow the format: `delimited-ages`

### infants

Number of infant passengers. An infant is 1 year old or younger.

`infants`

*   is optional

*   Type: `integer` ([Infant passengers. An infant is 1 year old or younger.](dayview-properties-infant-passengers-an-infant-is-1-year-old-or-younger.md))

*   cannot be null

#### infants Type

`integer` ([Infant passengers. An infant is 1 year old or younger.](dayview-properties-infant-passengers-an-infant-is-1-year-old-or-younger.md))

### cabinclass

Cabin class for the flight, possible values are: economy, premiumeconomy, business and first

`cabinclass`

*   is required

*   Type: `string` ([Cabin Class](dayview-properties-cabin-class.md))

*   cannot be null

#### cabinclass Type

`string` ([Cabin Class](dayview-properties-cabin-class.md))

#### cabinclass Constraints

**enum**: the value of this property must be equal to one of the following values:

| Value              | Explanation |
| :----------------- | :---------- |
| `"economy"`        |             |
| `"premiumeconomy"` |             |
| `"business"`       |             |
| `"first"`          |             |

#### cabinclass Default Value

The default value is:

```json
"economy"
```

### rtn

Trip type: 0 if oneway or 1 if return or multicity trip

`rtn`

*   is optional

*   Type: `string` ([Trip Type](dayview-properties-trip-type.md))

*   cannot be null

#### rtn Type

`string` ([Trip Type](dayview-properties-trip-type.md))

#### rtn Constraints

**enum**: the value of this property must be equal to one of the following values:

| Value | Explanation |
| :---- | :---------- |
| `"0"` |             |
| `"1"` |             |

### preferDirects

Will search only for direct flights if the value is true

`preferDirects`

*   is optional

*   Type: `boolean` ([Direct Flights Preferred](dayview-properties-direct-flights-preferred.md))

*   cannot be null

#### preferDirects Type

`boolean` ([Direct Flights Preferred](dayview-properties-direct-flights-preferred.md))

### showDirectDays

Show days with direct flights

`showDirectDays`

*   is optional

*   Type: `boolean` ([Show days with direct flights](dayview-properties-show-days-with-direct-flights.md))

*   cannot be null

#### showDirectDays Type

`boolean` ([Show days with direct flights](dayview-properties-show-days-with-direct-flights.md))

#### showDirectDays Default Value

The default value is:

```json
true
```

### outboundaltsenabled

Including nearby airports as an outbound place

`outboundaltsenabled`

*   is optional

*   Type: `boolean` ([Including nearby airports as an outbound place](dayview-properties-including-nearby-airports-as-an-outbound-place.md))

*   cannot be null

#### outboundaltsenabled Type

`boolean` ([Including nearby airports as an outbound place](dayview-properties-including-nearby-airports-as-an-outbound-place.md))

### inboundaltsenabled

Including nearby airports as an inbound place

`inboundaltsenabled`

*   is optional

*   Type: `boolean` ([Including nearby airports as an inbound place](dayview-properties-including-nearby-airports-as-an-inbound-place.md))

*   cannot be null

#### inboundaltsenabled Type

`boolean` ([Including nearby airports as an inbound place](dayview-properties-including-nearby-airports-as-an-inbound-place.md))

### alternativeorigins

An array of location codes which will be used as alternative origins

`alternativeorigins`

*   is optional

*   Type: `string[]`

*   cannot be null

#### alternativeorigins Type

`string[]`

### alternativedestinations

An array of location codes which will be used as alternative destinations

`alternativedestinations`

*   is optional

*   Type: `string[]`

*   cannot be null

#### alternativedestinations Type

`string[]`

### market

The market of the user. Examples: UK, US, ES

`market`

*   is optional

*   Type: `string` ([Market](dayview-properties-market.md))

*   cannot be null

#### market Type

`string` ([Market](dayview-properties-market.md))

#### market Constraints

**unknown format**: the value of this string must follow the format: `market`

### locale

The desired locale for the page. Examples: es-ES, en-GB, ru-RU

`locale`

*   is optional

*   Type: `string` ([Locale](dayview-properties-locale.md))

*   cannot be null

#### locale Type

`string` ([Locale](dayview-properties-locale.md))

#### locale Constraints

**unknown format**: the value of this string must follow the format: `locale`

### currency

The desired currency for the page. Examples: GBP, EUR, USD

`currency`

*   is optional

*   Type: `string` ([Currency](dayview-properties-currency.md))

*   cannot be null

#### currency Type

`string` ([Currency](dayview-properties-currency.md))

#### currency Constraints

**unknown format**: the value of this string must follow the format: `currency`

### sortby

Sets the sorting order for the results. Possible values are: best, cheapest and fastest.

`sortby`

*   is optional

*   Type: `string` ([Sorting](dayview-properties-sorting.md))

*   cannot be null

#### sortby Type

`string` ([Sorting](dayview-properties-sorting.md))

#### sortby Constraints

**enum**: the value of this property must be equal to one of the following values:

| Value        | Explanation |
| :----------- | :---------- |
| `"best"`     |             |
| `"cheapest"` |             |
| `"fastest"`  |             |

### airlines

List of comma separated IATA carrier codes to be passed to the dayview filters. For example: \&airlines=AA,KL,LH. To unselect airline from the filters, the code must be specified with exclamation mark. For example: \&airlines=AA,!KL,!LH

`airlines`

*   is optional

*   Type: `string` ([Sets the dayview airlines filters.](dayview-properties-sets-the-dayview-airlines-filters.md))

*   cannot be null

#### airlines Type

`string` ([Sets the dayview airlines filters.](dayview-properties-sets-the-dayview-airlines-filters.md))

#### airlines Constraints

**unknown format**: the value of this string must follow the format: `airlines`

### alliances

Comma separated list of alliance names passed to the dayview filters. For example: \&alliances=OneWorld,Star%20Alliance. Valid values are 'OneWorld', 'Star Alliance', 'SkyTeam' and 'Value Alliance'

`alliances`

*   is optional

*   Type: `string` ([Sets the dayview alliances filters.](dayview-properties-sets-the-dayview-alliances-filters.md))

*   cannot be null

#### alliances Type

`string` ([Sets the dayview alliances filters.](dayview-properties-sets-the-dayview-alliances-filters.md))

#### alliances Constraints

**unknown format**: the value of this string must follow the format: `alliances`

### departure-times

Sets the dayview departure time filters in minutes. For example: \&departure-times=00-90,30-990 (first leg departs between 00 and 1:30 and second leg departs between 00:30 and 16:30).

`departure-times`

*   is optional

*   Type: `string` ([Sets the dayview departure time filters.](dayview-properties-sets-the-dayview-departure-time-filters.md))

*   cannot be null

#### departure-times Type

`string` ([Sets the dayview departure time filters.](dayview-properties-sets-the-dayview-departure-time-filters.md))

#### departure-times Constraints

**unknown format**: the value of this string must follow the format: `departure-times`

### duration

Sets the dayview duration filters in minutes. For example: \&duration=1320 (22 hours)

`duration`

*   is optional

*   Type: `integer` ([Sets the dayview duration filters.](dayview-properties-sets-the-dayview-duration-filters.md))

*   cannot be null

#### duration Type

`integer` ([Sets the dayview duration filters.](dayview-properties-sets-the-dayview-duration-filters.md))
